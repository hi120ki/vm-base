- name: check fish installed
  stat:
    path: /usr/bin/fish
  register: check_fish
  become: no
- block:
    - name: Create directory for apt keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download and install Fish GPG key
      shell: |
        sudo gpg --homedir /tmp --no-default-keyring --keyring /etc/apt/keyrings/fish.gpg --keyserver keyserver.ubuntu.com --recv-keys 59FDA1CE1B84B3FAD89366C027557F056DC33CA5

    - name: Set permissions for Fish GPG key
      file:
        path: /etc/apt/keyrings/fish.gpg
        mode: "0644"

    - name: Define lsb_release
      shell: "lsb_release -cs"
      ignore_errors: True
      register: lsb_release

    - name: Add Fish repository to sources.list.d
      lineinfile:
        path: /etc/apt/sources.list.d/fish.list
        line: "deb [arch=amd64 signed-by=/etc/apt/keyrings/fish.gpg] https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu {{ lsb_release.stdout }} main"
        create: true

    - name: Update package cache again
      apt:
        update_cache: yes

    - name: Install Fish packages
      apt:
        name:
          - fish
  when:
    - not check_fish.stat.exists
- name: edit ~/.config/fish/config.fish
  become: no
  blockinfile:
    dest: ~/.config/fish/config.fish
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK fish"
    content: |
      # ======================================================================== #
      # Fish shell
      # ======================================================================== #

      function fish_greeting
      end

      set -g theme_powerline_fonts no
      set -g theme_nerd_fonts yes
      set -g theme_display_date no
      set -g theme_color_scheme solarized

      # ======================================================================== #
      # Customized command
      # ======================================================================== #

      function cd
        builtin cd $argv
        ls
      end

      # https://github.com/eza-community/eza
      alias ls 'eza -lg --octal-permissions --time-style long-iso --icons'
      alias l 'eza -lg --octal-permissions --time-style long-iso --icons'
      alias la 'eza -lag --octal-permissions --time-style long-iso --icons'
      function lt
        if count $argv > /dev/null
          eza -lT --git --git-ignore --icons --time-style=long-iso -L=$argv
        else
          eza -lT --git --git-ignore --icons --time-style=long-iso -L=2
        end
      end

      # https://github.com/sharkdp/bat
      # bat --list-themes
      alias c 'bat --theme="OneHalfDark"'

      # https://github.com/BurntSushi/ripgrep
      alias gr 'rg'
      alias grl 'rg -l'

      # https://github.com/sharkdp/fd
      alias f 'fd'
      alias rmds 'fd -IH ".DS_Store" | xargs rm'
      alias cleanc 'fd ".*.c" | xargs clang-format -style=Google -i'
      alias cleanmd 'fd ".*.md" | xargs prettier --write'
      alias cleanjson 'fd ".*.json" | xargs prettier --write'
      alias cleanyml 'fd ".*.yml" | xargs prettier --write'
      alias cleancss 'fd ".*.css" -E ".*min.css" | xargs prettier --write'
      alias cleanjs 'fd ".*.js" -E ".*min.js" | xargs prettier --write'
      alias cleanpy 'fd ".*.py" | xargs black'
      alias cleansh 'fd ".*.sh" | xargs shfmt -i 2 -w'
      alias cleanhtml 'fd ".*.html" -E ".*min.html" | xargs js-beautify -I -r -n -s 2 --no-preserve-newlines'

      # ======================================================================== #
      # Shorthand command
      # ======================================================================== #

      alias vg 'cd /vagrant'

      alias ] 'cd ../'
      alias rmr 'rm -rf'
      alias cl 'clear'
      alias ncf 'nano ~/.config/fish/config.fish'

      alias tga 'tar -zcvf'
      alias tgx 'tar -zxvf'

      alias up 'sudo apt update ; sudo apt upgrade -y'

      # Git
      alias g 'git'
      alias gl 'git pull'
      alias ga 'git add --all'
      alias gc 'git commit -m'
      alias gp 'git push origin (git_current_branch)'
      alias commit 'git add . ; git commit -m "commit" ; git push origin main'
- name: install fisher
  shell: curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install jorgebucaran/fisher
  become: no
  args:
    executable: /usr/bin/fish
- name: install fisher plugin
  shell: fisher install oh-my-fish/theme-bobthefish edc/bass jethrokuan/z
  become: no
  args:
    executable: /usr/bin/fish
- name: define whoami
  shell: whoami
  become: no
  register: whoami
- name: chsh -s /usr/bin/fish
  user:
    name: "{{ whoami.stdout }}"
    shell: /usr/bin/fish
